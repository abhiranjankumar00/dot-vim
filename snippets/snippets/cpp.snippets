snippet vi
	vector <int> ${1}
#snippet SS
snippet ss
	stringstream ${1}
#snippet ST
snippet st
	string ${1}
snippet vvi
	vector <vector<int> > ${1}
snippet ii
	pair <int, int> ${1}
snippet vs
	vector <string> ${1}
snippet tr
	for(auto ${1:it} = (${2:c}).begin(); $1 != ($2).end(); ++$1) {
		${3:/*Code*/}
	}
snippet	tri
	for(__typeof((${2:c}).begin()) ${1:i} = ($2).begin(); $1 != ($2).end(); ++$1) {
		 ${3:/*Code*/}
	}
snippet trx
	for(decltype((${2:c}).begin()) ${1:i} = ($2).begin(); $1 != ($2).end(); ++$1) {
		 ${3:/*Code*/}
	}
snippet endl
	"\n"${1}
snippet all
	${1:c}.begin(), $1.end()${2}
snippet mp
	make_pair(${1:a}, ${2:b})${3}
snippet pb
	push_back(${1:n})${2}
snippet debug
	cout << "${1:x} = " << $1 << "\n";${2}
snippet sz
	size()${1}
snippet class
	class ${1:/*Class name*/} {
	public:
		${2:/*body*/}
	};
snippet	pair
	pair <${1:int}, ${2:int}> ${3}
snippet X
	first${1}
snippet Y
	second${1}
snippet sort
	sort(${1:v}.begin(), $1.end());${2}
snippet reverse
	reverse(${1:v}.begin(), $1.end());${2}
snippet fill
	fill(${1:v}.begin(), $1.end(), ${2:0});${3}
snippet max_element
	max_element(${1:v}.begin(), $1.end());${2}
snippet min_element
	min_element(${1:v}.begin(), $1.end());${2}
# Read File Into Vector
#snippet readfile
#	std::vector<char> v;
#	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
#		char buf[1024];
#		while (size_t len = fread(buf, 1, sizeof(buf), $2))
#			v.insert(v.end(), buf, buf + len);
#		fclose($2);
#	}${3}

# std::map
snippet map
	map <${1:key}, ${2:value}> ${3:m};
#	std::map<${1:key}, ${2:value}> map${3};

# std::vector
snippet vector
	vector <${1:char}> ${2}
#	std::vector<${1:char}> v${2};

# std:set
snippet set
	set <${1:int}> ${2}
# Namespace
#snippet ns
#	namespace ${1:`Filename('', 'my')`} {
#		${2}
#	} /* $1 */

# Class
#snippet cl
#	class ${1:`Filename('$1_t', 'name')`} {
#	public:
#		$1 (${2:arguments});
#		virtual ~$1 ();
#	
#	private:
#		${3:/* data */}
#	};
