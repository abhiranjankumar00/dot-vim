snippet forn
	for(int ${1:i} = 0; $1 < ${2:n}; $1++) {
		${3:/* Code */}
	}
#	for(int ${1:i} = 0; $1 < (int) (${2:n}); $1++) ${3}
snippet forab
	for(int ${1:i} = ${2:a}; $1 <= ${3:b}; $1++) {
		${4:/* Code */}
	}
#	for(int ${1:i} = (int) (${2:a}); $1 <= (int) (${3:b}); $1++) ${4}
snippet rep
	for(int ${1:i} = ${2:a}; $1 >= ${3:b}; $1--) {
		${4:/* Code */}
	}
# If Condition
snippet if
	if(${1:/* condition */}) {
		${2:/* code */}
	}
snippet else
	else {
		${1:/* code */}
	}
snippet len
	length
snippet sop
	System.out.println(${1:/*Output*/});${2}
snippet sof
	System.out.printf("${1}", ${2});${3}
snippet do
	do{
		${2:/* code */}
	}while(${1:/* condition */});
# While Loop
snippet while
	while(${1:/* condition */}) {
		${2:/* code */}
	}
snippet class
	class ${1:/*Class name*/} {
	public:
		${2:/*body*/}
	};
#snippet main
#	public static void main (String [] args)
#	{
#		${1:/* code */}
#	}
#snippet pu
#	public
#snippet po
#	protected
#snippet pr
#	private
#snippet st
#	static
#snippet fi
#	final
#snippet ab
#	abstract
#snippet re
#	return
#snippet br
#	break;
#snippet de
#	default:
#		${1}
#snippet ca
#	catch(${1:Exception} ${2:e}) ${3}
#snippet th
#	throw 
#snippet sy
#	synchronized
#snippet im
#	import
#snippet j.u
#	java.util
#snippet j.i
#	java.io.
#snippet j.b
#	java.beans.
#snippet j.n
#	java.net.
#snippet j.m
#	java.math.
#snippet if
#	if (${1}) ${2}
#snippet el
#	else 
#snippet elif
#	else if (${1}) ${2}
#snippet wh
#	while (${1}) ${2}
#snippet for
#	for (${1}; ${2}; ${3}) ${4}
#snippet fore
#	for (${1} : ${2}) ${3}
#snippet sw
#	switch (${1}) ${2}
#snippet cs
#	case ${1}:
#		${2}
#	${3}
#snippet tc
#	public class ${1:`Filename()`} extends ${2:TestCase}
#snippet t
#	public void test${1:Name}() throws Exception ${2}
#snippet cl
#	class ${1:`Filename("", "untitled")`} ${2}
#snippet in
#	interface ${1:`Filename("", "untitled")`} ${2:extends Parent}${3}
#snippet m
#	${1:void} ${2:method}(${3}) ${4:throws }${5}
#snippet v
#	${1:String} ${2:var}${3: = null}${4};${5}
#snippet co
#	static public final ${1:String} ${2:var} = ${3};${4}
#snippet cos
#	static public final String ${1:var} = "${2}";${3}
#snippet as
#	assert ${1:test} : "${2:Failure message}";${3}
